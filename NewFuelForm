using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using MySql.Data.MySqlClient;

namespace VehicleMonitoringSystem
{
    public partial class NewFuelForm : Form
    {
        #region Variable
        private int fuelID,
                    supplierID;

        private string plateNumber,
                       vehicle,
                       typeOfFuel,
                       invoiceNumber;
        private bool paid = false;

        private DateTime date;
        private double amount;
        private Fuel _fuel = new Fuel();
        private Supplier _supplier = new Supplier();
        private List<Fuel> _fuels = new List<Fuel>();
        #endregion

        #region  Constructors
        public NewFuelForm()
        {
            InitializeComponent();
            fuelIDTB.Text = _fuel.CreateFuel().ToString();
            ComboBoxLoad();
        }
        #endregion

        #region Fuel Methods
        private void ShowData(string plateNumber)
        {
            _fuel = _fuel.RetrieveFuelInfo(plateNumber);

            fuelIDTB.Text = _fuel.FuelID.ToString();
            plateNumberCB.Text = _fuel.PlateNumber;
            dateDTP.Value = _fuel.FuelDate;
            typeOfFuelCB.Text = _fuel.TypeOfFuel;
           // supplierCB.Text = _fuel.SupplierID;
            amountTB.Text = _fuel.Amount.ToString("N2");
        }
        private void NewFuelForm_Load(object sender, EventArgs e)
        {

        }
        private void ComboBoxLoad()
        {
            _fuels = _fuel.RetrieveFuelList();
            foreach (Fuel f in _fuels)
            {
                plateNumberCB.Items.Add(f.PlateNumber);
                typeOfFuelCB.Items.Add(f.TypeOfFuel);
               // supplierCB.Items.Add(f.Supplier);
            }
        }
        //Entry Buttons
        private void newB_Click(object sender, EventArgs e)
        {
            NewSupplierForm newSupplierForm = new NewSupplierForm();
            newSupplierForm.ShowDialog();
        }
        private void doneB_Click(object sender, EventArgs e)
        {
            if (plateNumberCB.Text == "")
            {
                MessageBox.Show("Please choose a PLATE NUMBER", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else if (vehicleCB.Text == "")
            {
                MessageBox.Show("Please choose a VEHICLE", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else if (typeOfFuelCB.Text == "")
            {
                MessageBox.Show("Please choose the TYPE OF FUEL", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else if (invoiceNumberTB.Text == "")
            {
                MessageBox.Show("Please insert an INVOICE NUMBER", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else if (supplierCB.Text == "")
            {
                MessageBox.Show("Please choose a SUPPLIER/n If the SUPPLIER does not exist, create NEW SUPPLIER", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else if (amountTB.Text == "")
            {
                MessageBox.Show("Please insert the AMOUNT", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else
            {
                try
                {
                    fuelID = int.Parse(fuelIDTB.Text.Trim());
                    plateNumber = plateNumberCB.Text.Trim();
                    vehicle = vehicleCB.Text.Trim();
                    date = dateDTP.Value;
                    typeOfFuel = typeOfFuelCB.Text.Trim();
                    invoiceNumber = invoiceNumberTB.Text.Trim();
                    supplierID = _supplier.RetrieveSupplierID(supplierCB.Text.Trim());
                    amount = double.Parse(amountTB.Text.Trim());

                    _fuel = new Fuel(fuelID,
                                     plateNumber,
                                     date,
                                     typeOfFuel,
                                     invoiceNumber,
                                     supplierID,
                                     amount,
                                     paid);

                    _fuel.InsertFuel(_fuel);
                    Close();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.ToString());
                }
            }
        }
        private void cancelB_Click(object sender, EventArgs e)
        {
            Close();
        }
        private void payB_Click(object sender, EventArgs e)
        {
            if (plateNumberCB.Text == "")
            {
                MessageBox.Show("Please choose a PLATE NUMBER", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else if (vehicleCB.Text == "")
            {
                MessageBox.Show("Please choose a VEHICLE", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else if (typeOfFuelCB.Text == "")
            {
                MessageBox.Show("Please choose the TYPE OF FUEL", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else if (invoiceNumberTB.Text == "")
            {
                MessageBox.Show("Please insert an INVOICE NUMBER", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else if (supplierCB.Text == "")
            {
                MessageBox.Show("Please choose a SUPPLIER/n If the SUPPLIER does not exist, create NEW SUPPLIER", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else if (amountTB.Text == "")
            {
                MessageBox.Show("Please insert the AMOUNT", "ERROR", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else
            {
                try
                {
                    fuelID = int.Parse(fuelIDTB.Text.Trim());
                    plateNumber = plateNumberCB.Text.Trim();
                    vehicle = vehicleCB.Text.Trim();
                    date = dateDTP.Value;
                    typeOfFuel = typeOfFuelCB.Text.Trim();
                    invoiceNumber = invoiceNumberTB.Text.Trim();
                    supplierID = _supplier.RetrieveSupplierID(supplierCB.Text.Trim());
                    amount = double.Parse(amountTB.Text.Trim());

                    _fuel = new Fuel(fuelID,
                                     plateNumber,
                                     date,
                                     typeOfFuel,
                                     invoiceNumber,
                                     supplierID,
                                     amount,
                                     paid);

                    _fuel.InsertFuel(_fuel);
                    NewPaymentForm newPaymentForm = new NewPaymentForm();
                    newPaymentForm.ShowDialog();
                    Close();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.ToString());
                }
            }
        }
        #endregion
    }
}
